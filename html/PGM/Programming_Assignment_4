<div id="content">
				<a id="top"></a>
	        		        	<h1 id="firstHeading" class="firstHeading">PGM:Programming Assignment 4</h1>
				<div id="bodyContent">
		            <h3 id="siteSub">From Coursera</h3>
		            <div id="contentSub"></div>
		            		            		            					<!-- start content -->
					<div lang="en" dir="ltr" class="mw-content-ltr"><p>Is Part 1 of the assignment, ComputeInitialPotentials, underspecified and rejecting correct answers submitted?</p>
<p>Seems to me that the particular assignment of factors to cliques chosen can produce a different output from InitialPotentials.RESULT in PA4Sample.mat, but still be correct.</p>
<p>Likewise the order in which the factors are multiplied in might affect the result.</p>
<p>My output seems very similar to the required RESULT but with the .var of some factors permuted from those in the sample (same set, different order). Also .card and .val are same (multi)sets as for test sample RESULT (checked) and look like corresponding permutations (not checked).</p>
<p>I notice that submit.m includes (unused) routines for sorting the order of factors before serializing. Perhaps something similar is needed to sort order of .val in each factor?</p>
<p>Can anyone confirm that a particular assignment and variable order is required and can be deduced from the specifications?</p>
<p>If not, could this please be fixed and an extension of time allowed.</p>
<p>PS After writing above I found a work around solution in discussion formum:</p>
<p><a rel="nofollow" class="external free" href="https://class.coursera.org/pgm/forum/thread?thread_id=1156">https://class.coursera.org/pgm/forum/thread?thread_id=1156</a></p>
<p>I haven't verified that solution yet but the discussion there seems to confirm that it is a fault in the problem specification and grader so I am leaving this note here.</p>
<p>PPS as background, it seems more natural to use C.nodes{i} directly instead of copying it to P.cliqueList(i).var as suggested, (but NOT specified) at the top of ComputeInitialPotential, since the simplest loop to simultaneously find a suitable node and multipy in the factor will end up overwriting what you put there. However this seemingly more "natural" code does not produce identical output to the sample.</p>

<!-- 
NewPP limit report
Preprocessor node count: 1/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->


</div><div class="printfooter">
Retrieved from "<a href="https://share.coursera.org/wiki/index.php?title=PGM:Programming_Assignment_4&amp;oldid=400">https://share.coursera.org/wiki/index.php?title=PGM:Programming_Assignment_4&amp;oldid=400</a>"</div>
					<div id='catlinks' class='catlinks catlinks-allhidden'></div>					<!-- end content -->
									</div>
			</div>