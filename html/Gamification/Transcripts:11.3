<div id="content">
				<a id="top"></a>
	        		        	<h1 id="firstHeading" class="firstHeading">Gamification:Transcripts:11.3</h1>
				<div id="bodyContent">
		            <h3 id="siteSub">From Coursera</h3>
		            <div id="contentSub"></div>
		            		            		            					<!-- start content -->
					<div lang="en" dir="ltr" class="mw-content-ltr"><p>There are many mistakes that you can make in designing a gamified system. But, one of the most commong and one of the most dangerous is to forget about who the object at the system is, namely, the players. And to forget that players are people, they're human beings. They're  thinking, and feeling, and interacting agents. And while you can anticipate in many ways how they're going to behave, and certainly anticipate the different kinds of motivational structures that might push them in one direction or another, you can never be sure what they're going to do in designing gamified systems. It's critical to recognize that one thing that players may do is game the system. They may turn the tables on you and do something that you never expected and never intended. Sometimes this can be dangerous not just for you, but for them. Nicole Lazarro, the game designer who developed the concept of four types of fun, gives a great example in her presentations, which she calles, Gamification Can Kill. And the example os on the ramp to the San Francisco Bay bridge, maybe it's the Golden Gate Bridge. But it's one of the bridges in San Francisco, California. And like many urban transit systems, they have a system for pricing that's congestion based. The price goes up during rush hour to try to encourage people to go across the bridge at less busy times. So you see here at 6:59, I think this must be PM it's 6 bucks to go over the bridge but it's seven, a minute later to go over the bridge. Great, incentive systems, you call it a gamified system, you can call it behavioral economics. It suddenly encourages people to drive during off hours. What's the problem? The problem as points out, is if you drive towards the bridge at 6:59 p.m., you will see a whole bunch of people swerving off the road. Trying to park on the side because they know that if they wait just a minute or two more to go over the bridge it's $2 less. And the problem is what this is incentivizing people to do is to swerve dangerously off the road in ways that might cause them to get in an accident. And so that's the point about gamification can kill. We have to realie how people are going to respond to do these systems. They may very well react to the prompts that given not necessarily in ways that are anticipated or even too much in the way that they, that are, the ways that are anticipated and that could be dangerous. Now, one dimension of this is a recognition that sometimes people will cheat. That sometimes people will figure out a way to achieve their own aims in the system that are not the aims of the game designer. Maybe there's some flaw in the game that lets people accumulate ast numbers of points for a small amount of work. And if that option is there, many people will take it. Now, as I talked about, part of what makes a game a game is that the players have to voluntarily accept the rules of the game. That often, there are opportunities to cheat in the game but we don't do them, because if we do, then we're not following the rules, we're not playing the game, we're just doing something else entirely. And the people around us, our opponents, or other participants, won't even recognize that we're playing the game. But in gamified systems, where we're dealing with people interacting with computer based systems. Often even though they're in a social context, they're interacting individually, it's often easy for people to feel like the game that they're playing is one that allows them to. Bend the rules or make their own rules in ways that the game designer would consider cheating. Interestingly enough well designed games that have social elements tend to see this last since peer pressure, whether explicit or implicit, is enough to get people not to cheat even in ways that they could. But even there, there is the potential if the rewards are great enough or the incentive is great enough that people may try to tackle corners. And this is something that depending on the nature of the system maybe the game designer will just live with, or maybe it's something that the game needs to be expressly built with the anticipation that people act that way. This is a big reason why iteration and play testing is so critical in designing games as well as in effective gamification design because you can never be sure what exactly people are going to do until you get them in and see them actually doing it. In some cases though, cheating may be a virtue. It may actually help achieve results that the game designer is thinking about. How can that be? Well, let me give you one example. Games Gardner is an innovation designer who now works for a company called Spigot that makes a gamified prediction market system that can be used in companies to develop innovations by creating contests where people bet real money or virtual goods that potentially are translatable to real money on new ideas. And, he's been part of teams that have developed these kinds of systems in many different contexts, originally in England. He famously developed the idea street program at the Department of Welfare and Pensions in the UK. But before that, he did it for Loyd's Bank. And something interesting happened at Loyd's Bank where the created the innovation market. So, this was a market place where you came up with ideas that would be helpful innovations for the bank and people could buy and sell those innovations. And people could get together in teams to develop the innovations and the market we determine which were the more popular and more successful ones and then the company would take the more successful ones and try to implement them. And they found in this that a lot of cases, lots of amazing results in implementing the ideas that bubbled to the top through this production market place. But something interesting happened at Loyd's when they applied this Gamified System Insider Trading. People realized that they could find the good ideas and go and join up with those groups and be able to buy and sell with the ideas that were rising and successful in the system. In financial markets, insider trading is a danger, it's a form of cheating fraud because it's using information that you have that other people don't have. It undermines the trust in the financial markets, that's a reason that it's so prosecuted. But in this gamified system, this kinda virtual insider trading was not a bug but actually a feature. Because it was a way of strengthening and growing the teams around the great ideas. And it was a way of reinforcing, proving additional signal value around the ideas that people thought had great potential which is what the game applied system was about. It was not about making money for people or making money for companies that were issuing securities, it was about finding and developing great ideas and reinforcing them. So, the gaming of the game by the participants as Gardner realized was actually something that helped achieve that result. In all of these cases again, the critical piece is to recognize that people will act in unpredictable, sometimes spontaneous ways in response to the signals that the system produces. And so part of game design is building in structures that first of all, ensure that those activities, if they aren't anticipated, don't destroy the game. Don't create imbalances or otherwise make the game unplayable or undesirable for a large segment of the players. And ideally, create systems so that they help the game. So that even though people aren't doing what the game designer expressly told them to do, they're exercising their autonomy and therefore, feeling more intrinsically motivated in the activity that get to the same result that the gamification system was originally designed for.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 1/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->


</div><div class="printfooter">
Retrieved from "<a href="https://share.coursera.org/wiki/index.php?title=Gamification:Transcripts:11.3&amp;oldid=3579">https://share.coursera.org/wiki/index.php?title=Gamification:Transcripts:11.3&amp;oldid=3579</a>"</div>
					<div id='catlinks' class='catlinks catlinks-allhidden'></div>					<!-- end content -->
									</div>
			</div>