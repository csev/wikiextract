<div id="content">
				<a id="top"></a>
	        		        	<h1 id="firstHeading" class="firstHeading">Android-001:Subtitles:Lecture73:it</h1>
				<div id="bodyContent">
		            <h3 id="siteSub">From Coursera</h3>
		            <div id="contentSub"></div>
		            		            		            					<!-- start content -->
					<div lang="en" dir="ltr" class="mw-content-ltr"><p></p>
<h3> <span class="mw-headline" id="Multimedia_-_Part_2_-_Italian_subtitles">Multimedia - Part 2 - Italian subtitles</span></h3>
<ul>
<li><p><a href="/wiki/index.php/Android-001:Subtitles:Lecture71:it" title="Android-001:Subtitles:Lecture71:it">&lt;&lt; prev</a> | <a href="/wiki/index.php?title=Android-001:Subtitles:Lecture73:en&amp;action=edit&amp;redlink=1" class="new" title="Android-001:Subtitles:Lecture73:en (page does not exist)">en</a> <a href="/wiki/index.php?title=Android-001:Subtitles:Lecture73:es&amp;action=edit&amp;redlink=1" class="new" title="Android-001:Subtitles:Lecture73:es (page does not exist)">es</a> <strong class="selflink">it</strong> <a href="/wiki/index.php?title=Android-001:Subtitles:Lecture73:zh-tw&amp;action=edit&amp;redlink=1" class="new" title="Android-001:Subtitles:Lecture73:zh-tw (page does not exist)">zh-tw</a> <a href="/wiki/index.php?title=Android-001:Subtitles:Lecture73:pt&amp;action=edit&amp;redlink=1" class="new" title="Android-001:Subtitles:Lecture73:pt (page does not exist)">pt</a> | <a href="/wiki/index.php/Android-001:Subtitles:Lecture79:it" title="Android-001:Subtitles:Lecture79:it">next &gt;&gt;</a></p></li>
<li><p><a rel="nofollow" class="external text" href="https://www.dropbox.com/s/tmh3hn0nefkpd6r/6%20-%207%20-%20Multimedia%20-%20Part%202%20%2818-45%29.srt">Direct download</a></p></li>
</ul>
<pre>
1
00:00:09,589 --&gt; 00:00:12,460
Ciao, sono Adam Porter, e questo è

2
00:00:12,460 --&gt; 00:00:18,030
&quot;Programming Mobile Applications for
Android Handheld Systems&quot;.

3
00:00:20,410 --&gt; 00:00:22,560
La prossima classe è il MediaPlayer.

4
00:00:23,910 --&gt; 00:00:29,550
Il MediaPlayer controlla la riproduzione di
flussi e file audio e video.

5
00:00:29,550 --&gt; 00:00:32,900
E questo consente di incorporare audio
e video nelle vostre

6
00:00:32,900 --&gt; 00:00:38,530
applicazioni, e di lasciar controllare tale
riproduzione ad applicazioni e utenti.

7
00:00:39,730 --&gt; 00:00:43,490
Questa classe opera secondo una complessa
macchina a stati,

8
00:00:43,490 --&gt; 00:00:45,810
di cui non parlerò in questa lezione,

9
00:00:45,810 --&gt; 00:00:49,320
quindi date un'occhiata al seguente sito per
ulteriori informazioni.

10
00:00:54,880 --&gt; 00:01:00,120
Alcuni dei metodi che si usano spesso quando
si usa il MediaPlayer includono

11
00:01:00,120 --&gt; 00:01:04,540
setDataSource, che dice al MediaPlayer quale
flusso riprodurre,

12
00:01:05,940 --&gt; 00:01:11,090
prepare, che inizializza il MediaPlayer e
carica i flussi necessari.

13
00:01:11,090 --&gt; 00:01:15,520
Il metodo prepare è sincrono, e si usa
normalmente quando

14
00:01:15,520 --&gt; 00:01:19,890
il contenuto multimediale è memorizzato
in un file sul dispositivo.

15
00:01:19,890 --&gt; 00:01:22,930
C'è anche una versione asincrona di questo
metodo,

16
00:01:22,930 --&gt; 00:01:27,430
che può essere usata, ad esempio, quando i
media vengono riprodotti in streaming da Internet.

17
00:01:28,680 --&gt; 00:01:32,420
C'è anche un metodo start, per avviare o
riprendere la riproduzione.

18
00:01:32,420 --&gt; 00:01:36,360
Un metodo pause, per fermare la riproduzione
temporaneamente.

19
00:01:36,360 --&gt; 00:01:41,850
Un metodo seekTo, per passare a una
particolare posizione nel flusso.

20
00:01:41,850 --&gt; 00:01:44,270
Un metodo stop, per interrompere la riproduzione dei
media.

21
00:01:45,710 --&gt; 00:01:48,170
E il metodo release, che rilascia le

22
00:01:48,170 --&gt; 00:01:51,250
risorse utilizzate dal MediaPlayer corrente.

23
00:01:53,340 --&gt; 00:01:59,230
Un'altra classe che può essere usata per
visualizzare contenuti video è la classe VideoView.

24
00:01:59,230 --&gt; 00:02:03,440
Questa classe è una sottoclasse di
SurfaceView e internamente

25
00:02:03,440 --&gt; 00:02:06,330
fa uso del MediaPlayer di cui abbiamo appena
parlato.

26
00:02:07,370 --&gt; 00:02:12,240
Questa classe può caricare contenuti video da
diverse fonti, e comprende un

27
00:02:12,240 --&gt; 00:02:17,950
certo numero di metodi e controlli per
semplificare la visualizzazione di contenuti video.

28
00:02:20,140 --&gt; 00:02:22,480
La prossima applicazione di esempio è
chiamata

29
00:02:22,480 --&gt; 00:02:27,310
AudioVideoVideoPlay, e quest'applicazione
visualizza una semplice

30
00:02:27,310 --&gt; 00:02:33,520
View con controlli della riproduzione video,
e permette agli utenti di riprodurre file video.

31
00:02:33,520 --&gt; 00:02:36,240
In questo caso, il film è una clip dal

32
00:02:36,240 --&gt; 00:02:39,800
film &quot;1902, A Trip to the Moon&quot;, di Georges
Méliès.

33
00:02:39,800 --&gt; 00:02:44,370
Guardiamolo. Quindi ecco il mio dispositivo.

34
00:02:48,270 --&gt; 00:02:52,578
E ora avvio l'applicazione
AudioVideoVideoPlay.

35
00:02:52,578 --&gt; 00:02:59,700
Se ora tocco sul display, si vede apparire
un insieme di controlli della riproduzione.

36
00:02:59,700 --&gt; 00:03:04,980
E ora premo il triangolo singolo e il video
inizia a riprodursi.

37
00:03:04,980 --&gt; 00:03:05,936
Ecco.

38
00:03:42,489 --&gt; 00:03:45,443
Diamo un'occhiata al codice sorgente di
quest'applicazione.

39
00:03:48,393 --&gt; 00:03:53,954
Ecco l'applicazione AudioVideoVideoPlay
aperta nell'IDE.

40
00:03:53,954 --&gt; 00:03:57,016
Ora apro la MainActivity.

41
00:03:57,016 --&gt; 00:04:02,245
Nell'onCreate il codice ottiene prima un
riferimento a una VideoView che si trova

42
00:04:02,245 --&gt; 00:04:08,310
nel layout dell'Activity. Poi crea un
MediaController,

43
00:04:08,310 --&gt; 00:04:13,010
che è una View che contiene i controlli per
controllare il MediaPlayer.

44
00:04:14,580 --&gt; 00:04:18,920
Il codice prosegue disattivando i controlli
media e

45
00:04:18,920 --&gt; 00:04:23,440
quindi associando questo MediaController
alla VideoView, con

46
00:04:23,440 --&gt; 00:04:27,800
una chiamata al metodo
setMediaController della VideoView.

47
00:04:29,540 --&gt; 00:04:35,360
Poi il codice identifica il file
multimediale da riprodurre, passandovi un URI

48
00:04:35,360 --&gt; 00:04:40,800
che punta a un file memorizzato nella
cartella res/draw.

49
00:04:42,210 --&gt; 00:04:47,370
Dopo di che, il codice imposta un
OnPreparedListener per la VideoView.

50
00:04:48,690 --&gt; 00:04:53,970
Questo codice viene chiamato quando i media
sono stati caricati e sono pronti alla riproduzione.

51
00:04:53,970 --&gt; 00:04:56,250
E quando accade, il codice attiva

52
00:04:56,250 --&gt; 00:05:00,310
il MediaController, in modo che l'utente
possa iniziare a riprodurre il film.

53
00:05:01,900 --&gt; 00:05:06,820
E, infine, nel metodo onPause,
il codice disattiva la VideoView.

54
00:05:10,810 --&gt; 00:05:15,150
La prossima classe di cui parleremo è la
classe MediaRecorder.

55
00:05:15,150 --&gt; 00:05:19,590
Ora, questa classe può essere usata
per registrare sia audio che video.

56
00:05:19,590 --&gt; 00:05:22,974
La classe opera secondo una macchina a
stati,

57
00:05:22,974 --&gt; 00:05:25,698
riguardo alla quale potete leggere di più a
questo indirizzo.

58
00:05:29,109 --&gt; 00:05:31,957
Ora, alcuni dei metodi del MediaRecorder

59
00:05:31,957 --&gt; 00:05:37,580
che probabilmente userete includono:
setAudioSource e setVideoSource,

60
00:05:37,580 --&gt; 00:05:40,370
che impostano la sorgente dell'input, come

61
00:05:40,370 --&gt; 00:05:43,960
il microfono per l'audio, o una
fotocamera per i video.

62
00:05:45,170 --&gt; 00:05:50,160
SetOutputFormat, che imposta il formato di
output della registrazione.

63
00:05:50,160 --&gt; 00:05:54,340
Ad esempio mp4.
Prepare,

64
00:05:54,340 --&gt; 00:05:58,380
che prepara il registratore a catturare e
codificare dati.

65
00:05:59,940 --&gt; 00:06:03,150
Start, che avvia il vero e proprio processo
di registrazione.

66
00:06:04,210 --&gt; 00:06:07,670
Stop, che ferma il processo di registrazione.

67
00:06:07,670 --&gt; 00:06:12,597
E Release, che rilascia le risorse
mantenute da questo MediaRecorder.

68
00:06:14,950 --&gt; 00:06:19,940
La nostra prossima applicazione di esempio è
AudioVideoAudioRecording.

69
00:06:19,940 --&gt; 00:06:23,470
Ora, quest'applicazione registra audio
dall'utente e

70
00:06:23,470 --&gt; 00:06:27,350
può riprodurre l'audio registrato per
l'utente.

71
00:06:27,350 --&gt; 00:06:30,100
Usiamo quest'applicazione per registrare
la mia voce.

72
00:06:32,800 --&gt; 00:06:33,918
Dunque, ecco il mio dispositivo.

73
00:06:36,253 --&gt; 00:06:40,820
E ora avvio l'applicazione
AudioVideoAudioRecording.

74
00:06:43,500 --&gt; 00:06:46,850
Quest'applicazione mostra due ToggleButton,
uno

75
00:06:46,850 --&gt; 00:06:50,820
etichettato &quot;Start Recording&quot; e uno
etichettato &quot;Start Playback&quot;.

76
00:06:51,900 --&gt; 00:06:56,520
Quando premo il pulsante Start Recording
l'applicazione inizia a registrare.

77
00:06:57,890 --&gt; 00:07:01,498
L'etichetta del pulsante diventa &quot;Stop
Recording&quot;,

78
00:07:01,498 --&gt; 00:07:04,463
e il pulsante &quot;Playback&quot; viene disattivato.

79
00:07:06,820 --&gt; 00:07:11,350
Quando si preme di nuovo il tasto &quot;Start
Recording&quot;, la registrazione si ferma.

80
00:07:11,350 --&gt; 00:07:17,108
L'etichetta del pulsante cambia di nuovo, e
il pulsante di riproduzione viene riattivato.

81
00:07:17,108 --&gt; 00:07:21,992
Proviamola.
Ora premo il pulsante &quot;Start Recording&quot;.

82
00:07:23,557 --&gt; 00:07:27,340
Test, test, un, due, tre, test.

83
00:07:29,030 --&gt; 00:07:33,160
E ora che ho premuto di nuovo il tasto,
la registrazione viene terminata e

84
00:07:33,160 --&gt; 00:07:38,640
salvata, e il pulsante &quot;Start Playback&quot; ora
è attivo.

85
00:07:38,640 --&gt; 00:07:39,910
Ora lo premo.

86
00:07:43,080 --&gt; 00:07:46,600
Test, test, un, due, tre, test.

87
00:07:46,600 --&gt; 00:07:47,100
E

88
00:07:48,830 --&gt; 00:07:52,860
ora premo di nuovo il pulsante.
E siamo di nuovo al punto di partenza.

89
00:07:54,830 --&gt; 00:07:57,440
Diamo un'occhiata al codice sorgente di
quest'applicazione.

90
00:08:00,380 --&gt; 00:08:05,980
Ecco l'applicazione AudioVideoAudioRecording
aperta nell'IDE.

91
00:08:05,980 --&gt; 00:08:07,410
Ora apro la MainActivity.

92
00:08:08,710 --&gt; 00:08:12,830
In onCreate il codice ottiene prima i
riferimenti ai due ToggleButton.

93
00:08:14,110 --&gt; 00:08:19,690
Quindi imposta un OnCheckChangedListener per
ciascuno dei

94
00:08:19,690 --&gt; 00:08:25,571
ToggleButton. Questo codice viene chiamato
quando cambia lo stato di selezione

95
00:08:25,571 --&gt; 00:08:28,154
di un ToggleButton.

96
00:08:28,154 --&gt; 00:08:32,063
Guardiamo il primo ToggleButton,
che è il pulsante di registrazione.

97
00:08:35,894 --&gt; 00:08:42,494
Quando lo stato di questo pulsante cambia,
diciamo da off a on, questo codice

98
00:08:42,494 --&gt; 00:08:49,383
prima disattiva il tasto play, poi chiama il
metodo onRecordPressed.

99
00:08:49,383 --&gt; 00:08:51,750
Il pulsante di riproduzione fa qualcosa di
simile.

100
00:08:52,860 --&gt; 00:08:56,050
Prima cambia lo stato di attivazione del
pulsante di

101
00:08:56,050 --&gt; 00:09:00,260
registrazione, disattivandolo se l'utente
vuole iniziare la riproduzione,

102
00:09:00,260 --&gt; 00:09:01,040
o abilitandolo

103
00:09:01,040 --&gt; 00:09:03,360
se l'utente vuole interrompere la
riproduzione.

104
00:09:04,780 --&gt; 00:09:08,270
Dopo di che, chiama il metodo
onPlayPressed.

105
00:09:11,490 --&gt; 00:09:14,710
Guardiamo prima il metodo onRecordPressed.

106
00:09:14,710 --&gt; 00:09:16,490
Come potete vedere, questo metodo prende

107
00:09:16,490 --&gt; 00:09:20,289
un boolean come parametro, chiamato
shouldStartRecording.

108
00:09:21,290 --&gt; 00:09:27,190
Se shouldStartRecording è true, il codice
chiama il metodo startRecording.

109
00:09:27,190 --&gt; 00:09:29,860
Altrimenti, chiama il metodo stopRecording.

110
00:09:31,290 --&gt; 00:09:36,560
Il metodo startRecording prima crea un nuovo
MediaRecorder, poi imposta

111
00:09:36,560 --&gt; 00:09:41,380
il microfono come sua sorgente.
Poi imposta il formato di output.

112
00:09:42,980 --&gt; 00:09:45,960
E poi il file di output in cui la
registrazione verrà salvata.

113
00:09:47,650 --&gt; 00:09:51,669
Poi imposta l'encoder del file audio.

114
00:09:51,669 --&gt; 00:09:57,156
Ora, proseguendo, il codice chiama prepare
per far preparare il recorder,

115
00:09:57,156 --&gt; 00:10:02,147
e poi finalmente si chiama il metodo
start per iniziare la registrazione.

116
00:10:03,949 --&gt; 00:10:06,991
Il metodo stopRecording, invece, ferma il

117
00:10:06,991 --&gt; 00:10:10,279
MediaRecorder e poi rilascia le sue risorse.

118
00:10:14,144 --&gt; 00:10:16,319
Se l'utente invece aveva premuto il

119
00:10:16,319 --&gt; 00:10:20,382
pulsante di riproduzione, allora sarebbe
stato chiamato onPlayPressed.

120
00:10:22,100 --&gt; 00:10:23,760
Se il pulsante era selezionato, allora

121
00:10:23,760 --&gt; 00:10:27,650
il parametro shouldStartPlaying sarebbe
stato true.

122
00:10:27,650 --&gt; 00:10:30,560
In tal caso, viene chiamato il metodo
startPlaying,

123
00:10:30,560 --&gt; 00:10:34,530
altrimenti viene chiamato il metodo
stopPlaying.

124
00:10:36,890 --&gt; 00:10:40,409
Il metodo startPlaying parte creando un
MediaPlayer.

125
00:10:41,440 --&gt; 00:10:45,998
Poi continua impostando la sua sorgente
dati, poi chiamando

126
00:10:45,998 --&gt; 00:10:50,920
prepare sul MediaPlater, e poi chiamando il
metodo start.

127
00:10:52,470 --&gt; 00:10:55,170
Il metodo stopPlaying ferma i media

128
00:10:55,170 --&gt; 00:10:58,933
in riproduzione, e quindi rilascia le
risorse del MediaPlayer.

129
00:11:01,502 --&gt; 00:11:06,610
L'ultima classe di cui parleremo in questa
lezione è la classe Camera.

130
00:11:06,610 --&gt; 00:11:10,960
Questa classe consente alle applicazioni
di accedere al servizio fotocamera.

131
00:11:10,960 --&gt; 00:11:15,700
Il codice di basso livello che gestisce la
vera fotocamera hardware del dispositivo.

132
00:11:16,780 --&gt; 00:11:23,810
Ora, attraverso questa classe la vostra applicazione
può gestire le impostazioni per scattare foto,

133
00:11:23,810 --&gt; 00:11:26,630
avviare e fermare una funzione di anteprima,
che permette

134
00:11:26,630 --&gt; 00:11:31,700
di utilizzare il display del dispositivo come un
sorta di mirino della fotocamera,

135
00:11:31,700 --&gt; 00:11:35,530
e, soprattutto, permette di
scattare foto e video.

136
00:11:37,220 --&gt; 00:11:42,390
Per utilizzare le funzioni della fotocamera
bisogna impostare alcuni permessi e feature.

137
00:11:42,390 --&gt; 00:11:45,890
Avete bisogno perlomeno del permesso CAMERA,
e probabilmente vorrete

138
00:11:45,890 --&gt; 00:11:52,760
includere un tag uses-feature nel file
AndroidManifest.xml che specifica

139
00:11:52,760 --&gt; 00:11:57,590
la necessità di una fotocamera.
E si consiglia di specificare che la vostra

140
00:11:57,590 --&gt; 00:12:02,830
applicazione richiede altre funzionalità
secondarie, come l'autofocus o il flash.

141
00:12:05,280 --&gt; 00:12:08,710
Sebbene potreste facilmente usare
l'applicazione fotocamera built-in per fare

142
00:12:08,710 --&gt; 00:12:10,380
foto, potreste voler aggiungere

143
00:12:10,380 --&gt; 00:12:13,390
alcune caratteristiche alla tradizionale
applicazione della fotocamera.

144
00:12:13,390 --&gt; 00:12:16,750
Oppure potreste voler usare la fotocamera
per altri scopi.

145
00:12:16,750 --&gt; 00:12:20,600
In questo caso, è possibile seguire
i seguenti passi:

146
00:12:20,600 --&gt; 00:12:23,760
in primo luogo, ottenere un'istanza di
Camera.

147
00:12:23,760 --&gt; 00:12:27,570
Poi, è possibile impostare eventuali
parametri della fotocamera necessari.

148
00:12:28,670 --&gt; 00:12:30,460
Dopo di che, si può impostare la
visualizzazione

149
00:12:30,460 --&gt; 00:12:34,890
dell'anteprima, in modo che l'utente
possa vedere ciò che vede la fotocamera.

150
00:12:36,300 --&gt; 00:12:39,110
Poi si avvia l'anteprima e la si mantiene

151
00:12:39,110 --&gt; 00:12:41,440
in esecuzione, fino a quando l'utente
non scatta una foto.

152
00:12:42,970 --&gt; 00:12:44,970
E una volta che l'utente avrà scattato una
foto, la vostra

153
00:12:44,970 --&gt; 00:12:48,940
applicazione riceverà e processerà
l'immagine.

154
00:12:48,940 --&gt; 00:12:53,580
E alla fine la vostra applicazione rilascerà
la fotocamera

155
00:12:53,580 --&gt; 00:12:56,210
in modo che altre applicazioni
possano avervi accesso.

156
00:12:58,630 --&gt; 00:13:04,350
L'ultima applicazione di esempio di questa
lezione si chiama AudioVideoCamera.

157
00:13:04,350 --&gt; 00:13:07,580
Quest'applicazione scatta delle foto e usa

158
00:13:07,580 --&gt; 00:13:11,220
il display del dispositivo come
mirino della fotocamera.

159
00:13:11,220 --&gt; 00:13:12,360
Proviamola.
Dunque,

160
00:13:14,730 --&gt; 00:13:15,750
ecco il mio dispositivo.

161
00:13:16,880 --&gt; 00:13:20,641
E ora avvio l'applicazione AudioVideoCamera.

162
00:13:21,980 --&gt; 00:13:24,440
Come potete vedere, l'applicazione mostra

163
00:13:24,440 --&gt; 00:13:28,910
l'immagine attualmente visibile
attraverso la lente della fotocamera.

164
00:13:28,910 --&gt; 00:13:31,840
E se si muove la fotocamera, l'immagine
cambia.

165
00:13:33,000 --&gt; 00:13:35,700
Se l'utente è soddisfatto dell'immagine,
allora

166
00:13:35,700 --&gt; 00:13:39,290
può semplicemente toccare lo schermo
per scattare una foto.

167
00:13:40,500 --&gt; 00:13:42,930
E quando lo fa, la fotocamera otterrà

168
00:13:42,930 --&gt; 00:13:47,890
l'immagine, e poi congelerà la finestra
dell'anteprima per circa due secondi.

169
00:13:47,890 --&gt; 00:13:51,000
In questo modo l'utente può vedere la foto
che ha appena scattato.

170
00:13:52,010 --&gt; 00:13:53,450
Ora lo faccio.

171
00:13:53,450 --&gt; 00:13:55,950
Tocco il display per scattare la foto

172
00:13:55,950 --&gt; 00:14:01,140
e ora l'anteprima si blocca per circa due
secondi.

173
00:14:01,140 --&gt; 00:14:03,640
Ora la fotocamera è pronta per scattare
un'altra foto.

174
00:14:05,030 --&gt; 00:14:05,500
Diamo un'occhiata al

175
00:14:05,500 --&gt; 00:14:13,051
codice sorgente di quest'applicazione.
Ecco l'applicazione AudioVideoCamera

176
00:14:13,051 --&gt; 00:14:18,997
aperta nell'IDE.
Ora apro la MainActivity.

177
00:14:18,997 --&gt; 00:14:21,581
E scorro giù nel metodo onCreate.

178
00:14:23,176 --&gt; 00:14:26,046
E una delle cose che vediamo qui è che il
codice

179
00:14:26,046 --&gt; 00:14:30,958
chiama il metodo getCamera per ottenere
un riferimento all'oggetto Camera.

180
00:14:30,958 --&gt; 00:14:33,049
Scorriamo fino a tale metodo.

181
00:14:37,538 --&gt; 00:14:41,640
Questo metodo chiama il metodo open della
classe Camera,

182
00:14:41,640 --&gt; 00:14:46,980
che restituisce un riferimento alla prima
fotocamera sul retro di questo dispositivo.

183
00:14:48,670 --&gt; 00:14:51,500
Se il dispositivo è dotato di più fotocamere,
è possibile utilizzare

184
00:14:51,500 --&gt; 00:14:55,360
altre versioni del metodo open per ottenere
fotocamere specifiche.

185
00:14:57,180 --&gt; 00:15:02,540
Ora, scorrendo indietro su nell'onCreate, il
codice ora imposta un TouchListener per la

186
00:15:02,540 --&gt; 00:15:03,250
View principale.

187
00:15:03,250 --&gt; 00:15:09,290
E quando l'utente toccherà lo schermo, verrà
chiamato il metodo onTouch di questo listener.

188
00:15:10,460 --&gt; 00:15:15,785
E questo metodo chiamerà il metodo
takePicture di Camera per scattare una foto.

189
00:15:15,785 --&gt; 00:15:18,980
Torneremo su questo metodo tra alcuni
secondi.

190
00:15:20,210 --&gt; 00:15:26,110
Poi il codice imposta una SurfaceView, che
viene usata per mostrare l'anteprima,

191
00:15:27,580 --&gt; 00:15:30,210
che mostra all'utente ciò che sta vedendo
attualmente la fotocamera.

192
00:15:32,060 --&gt; 00:15:36,420
E questi passi sono proprio quelli di cui
abbiamo parlato nella lezione sulla grafica.

193
00:15:36,420 --&gt; 00:15:40,330
In primo luogo, il codice ottiene il
SurfaceHolder della SurfaceView,

194
00:15:40,330 --&gt; 00:15:44,780
poi aggiunge un oggetto Callback al
SurfaceHolder.

195
00:15:45,860 --&gt; 00:15:49,960
E tale oggetto Callback è definito sotto.
Scorriamo fino ad esso.

196
00:15:51,490 --&gt; 00:15:53,086
Ora, come ricorderete, l'interfaccia

197
00:15:53,086 --&gt; 00:15:57,140
SurfaceHolder.Callback definisce tre metodi.

198
00:15:58,300 --&gt; 00:16:04,703
SurfaceCreated, surfaceChanged, e
surfaceDestroyed.

199
00:16:04,703 --&gt; 00:16:08,255
Il metodo surfaceCreated inizia
impostando il SurfaceHolder

200
00:16:08,255 --&gt; 00:16:11,430
sul quale la fotocamera
visualizzerà la sua anteprima.

201
00:16:13,230 --&gt; 00:16:16,030
Dopo di che, il codice avvia l'anteprima
della fotocamera.

202
00:16:17,710 --&gt; 00:16:19,410
Quando la superficie cambia la sua struttura

203
00:16:19,410 --&gt; 00:16:24,020
o il suo formato, viene chiamato il metodo
surfaceChanged.

204
00:16:24,020 --&gt; 00:16:29,440
E questo metodo disattiva i tocchi sul layout
e poi ferma l'anteprima della fotocamera.

205
00:16:30,720 --&gt; 00:16:34,900
Quindi il codice modifica i parametri della
fotocamera.

206
00:16:34,900 --&gt; 00:16:39,590
E in questo caso il codice cerca la dimensione
appropriata per l'anteprima della fotocamera.

207
00:16:39,590 --&gt; 00:16:43,470
E poi imposta la dimensione dell'anteprima,

208
00:16:43,470 --&gt; 00:16:47,210
quindi ripassa l'oggetto con i parametri
aggiornati alla Camera.

209
00:16:49,050 --&gt; 00:16:51,830
Ora che i parametri sono stati impostati, il
codice

210
00:16:51,830 --&gt; 00:16:55,590
riavvia l'anteprima, chiamando il metodo
startPreview.

211
00:16:56,700 --&gt; 00:17:00,700
Infine, il codice riattiva i tocchi
sul layout.

212
00:17:03,430 --&gt; 00:17:05,800
Quindi, ora che abbiamo preparato e gestito
il

213
00:17:05,800 --&gt; 00:17:10,140
display dell'anteprima, torniamo indietro e
guardiamo come di scatta una foto.

214
00:17:11,340 --&gt; 00:17:13,960
Quindi scorriamo indietro
all'OnTouchListener.

215
00:17:15,990 --&gt; 00:17:20,520
Quando l'utente tocca lo schermo, viene
chiamato il metodo takePicture.

216
00:17:21,640 --&gt; 00:17:26,068
In tale metodo il codice passa due
oggetti CameraCallback.

217
00:17:27,120 --&gt; 00:17:31,591
Uno è lo ShutterCallback, e l'altro è il
CameraCallback.

218
00:17:32,912 --&gt; 00:17:37,830
Lo ShutterCallback viene chiamato nel momento
in cui l'utente scatta la foto,

219
00:17:37,830 --&gt; 00:17:42,010
fondamentalmente per far sapere all'utente
che la fotocamera sta scattando una foto.

220
00:17:44,292 --&gt; 00:17:47,810
Il CameraCallback usato qui viene chiamato
dopo che l'immagine

221
00:17:47,810 --&gt; 00:17:52,890
è stata ottenuta e quando è disponibile
l'immagine compressa.

222
00:17:52,890 --&gt; 00:17:59,040
Quando ciò accade, viene chiamato il metodo
onPictureTaken del CameraCallback.

223
00:18:00,280 --&gt; 00:18:03,080
In questo esempio, il codice mette
semplicemente in pausa

224
00:18:03,080 --&gt; 00:18:06,200
il thread per due secondi, e poi riavvia
l'anteprima.

225
00:18:07,400 --&gt; 00:18:09,760
E potreste notare che questa particolare

226
00:18:09,760 --&gt; 00:18:12,970
applicazione non salva realmente l'immagine.

227
00:18:12,970 --&gt; 00:18:16,302
Ma ovviamente, di solito vorreste farlo, e

228
00:18:16,302 --&gt; 00:18:19,586
in tal caso, lo fareste tipicamente proprio
qui in questo metodo.

229
00:18:20,947 --&gt; 00:18:24,570
L'ultimo metodo di cui parlerò è onPause.

230
00:18:24,570 --&gt; 00:18:30,670
Qui il codice disabilita i tocchi sul
display, disattiva l'anteprima,

231
00:18:30,670 --&gt; 00:18:36,377
e poi rilascia la fotocamera in modo che
altre applicazioni possano usarla.

232
00:18:36,377 --&gt; 00:18:39,790
Dunque, è tutto per la nostra lezione sui
multimedia.

233
00:18:39,790 --&gt; 00:18:43,250
Unitevi a me la prossima volta,
quando parleremo dei sensori.

234
00:18:44,280 --&gt; 00:18:44,680
Grazie.
</pre>

<!-- 
NewPP limit report
Preprocessor node count: 11/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->


</div><div class="printfooter">
Retrieved from "<a href="https://share.coursera.org/wiki/index.php?title=Android-001:Subtitles:Lecture73:it&amp;oldid=23579">https://share.coursera.org/wiki/index.php?title=Android-001:Subtitles:Lecture73:it&amp;oldid=23579</a>"</div>
					<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/index.php/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/wiki/index.php/Category:Android:Subtitles" title="Category:Android:Subtitles">Android:Subtitles</a></li></ul></div></div>					<!-- end content -->
									</div>
			</div>