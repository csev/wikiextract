<div id="content">
				<a id="top"></a>
	        		        	<h1 id="firstHeading" class="firstHeading">Compilers:Testsuites</h1>
				<div id="bodyContent">
		            <h3 id="siteSub">From Coursera</h3>
		            <div id="contentSub"></div>
		            		            		            					<!-- start content -->
					<div lang="en" dir="ltr" class="mw-content-ltr"><div style="border-left:15px solid darkgreen;padding-left:20px;"><table><td style="padding:16px;padding-right:20px;"><span style="font-weight:bold;font-size:120%;">note</span></td><td>If you use Microsoft Windows please install Cygwin and execute the following commands from Cygwin environment.</td></table></div>
<p><br /></p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Running_testsuites"><span class="tocnumber">1</span> <span class="toctext">Running testsuites</span></a>
<ul>
<li class="toclevel-2"><a href="#run.sh"><span class="tocnumber">1.1</span> <span class="toctext">run.sh</span></a></li>
<li class="toclevel-2"><a href="#run_all.sh"><span class="tocnumber">1.2</span> <span class="toctext">run_all.sh</span></a></li>
<li class="toclevel-2"><a href="#comp.sh"><span class="tocnumber">1.3</span> <span class="toctext">comp.sh</span></a></li>
<li class="toclevel-2"><a href="#scan_all.sh"><span class="tocnumber">1.4</span> <span class="toctext">scan_all.sh</span></a></li>
<li class="toclevel-2"><a href="#parse_all.sh"><span class="tocnumber">1.5</span> <span class="toctext">parse_all.sh</span></a></li>
<li class="toclevel-2"><a href="#semant_all.sh"><span class="tocnumber">1.6</span> <span class="toctext">semant_all.sh</span></a></li>
<li class="toclevel-2"><a href="#cgen_all.sh"><span class="tocnumber">1.7</span> <span class="toctext">cgen_all.sh</span></a></li>
<li class="toclevel-2"><a href="#all_tests.sh"><span class="tocnumber">1.8</span> <span class="toctext">all_tests.sh</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Running_testsuites">Running testsuites</span></h1>
<p>Once you have all COOL source for grading, you can use reference tools to create reference output files. From that point you can test your own COOL lexer, parser, and so on by comparing reference output and output from your program.</p>
<p>Those scripts are here to help you automate this process. </p>
<p>The assumed environment:</p>
<ul>
<li><p>all ".sh" scripts are in the same directory</p></li>
<li><p>there is subdirectory "temp"</p></li>
<li><p>there is subdirectory "testsuite", and further there are subdirectories "scan", "parse", "semant", and "cgen" with ".cool" source files and ".cool.ref" reference output files</p></li>
<li><p>in case you would like to accept the differences between reference output and yours, add ".diff" file from subdirectory "temp" as ".diff.acc" next to ".cool" file in the "testsuite" directory</p></li>
</ul>
<p>Normally you would run <code>sh scan_all.sh</code> (to test all scanning), <code>sh parse_all.sh</code> (to test all parsing), <code>sh semant_all.sh</code> (to run all semantic analysis), <code>sh cgen_all.sh</code> (to run all code generation) or <code>sh all_tests.sh</code> (to run all tests from all stages).</p>
<p><strong>Modifications:</strong> you should edit <code>run.sh</code> (and maybe <code>run_all.sh</code>) to make them work in your environment.</p>
<h2> <span class="mw-headline" id="run.sh">run.sh</span></h2>
<p>Basic building block of entire suite. Please edit this file to use your executable file (here I call .Net binary executable with help of Mono) and your working directories. This script assumes your compiler recognizes arguments in form "--op filename", where "op" is either "scan", "parse", "semant", or "cgen" -- if not, change script accordingly.</p>
<code><pre>#!/bin/bash

CALLENV=mono
BASEDIR=/mnt/mobile

if [ &quot;$OSTYPE&quot; == &quot;cygwin&quot; ]
then
  CALLENV=
  BASEDIR=/cygdrive/h
fi

$CALLENV $BASEDIR/Projects/CoolCompiler/CoolCompiler/bin/Debug/CoolCompiler.exe --$1 $2
</pre></code>
<h2> <span class="mw-headline" id="run_all.sh">run_all.sh</span></h2>
<p>If you run the testsuite against grading files you may want to set <code>GRADING</code> variable (below) to <code>grading</code>.</p>
<code><pre>#!/bin/bash

MORE=less

GRADING=

MODE=$1
EXT=$2

DATADIR=./
HEREDIR=$(pwd)

if [ &quot;$GRADING&quot; == &quot;&quot; ]
then
  EXT=cool
fi

cd $DATADIR/testsuite/$MODE

for fn in $(ls -1S *.$EXT | tac)
do
    ERR=$(sh $HEREDIR/comp.sh $HEREDIR ${MODE} ${fn})
    if [ &quot;$ERR&quot;&#160;!= &quot;&quot; ]
    then
        echo $fn
        echo &quot;$ERR&quot; | $MORE
        echo -e &quot;LEFT: reference \t\t\t\t\t\t| RIGHT: mine&quot;
        echo $fn
        exit 1
    else
        echo $MODE: $fn ... OK!
    fi
done
</pre></code>
<h2> <span class="mw-headline" id="comp.sh">comp.sh</span></h2>
<code><pre>#!/bin/bash

HEREDIR=$1
MODE=$2
FILE=$3

OPT=--suppress-common-lines
if [ &quot;$4&quot;&#160;!= &quot;&quot; ]
then
  OPT=
fi

OUTDIR=../../temp

if [ -e &quot;$FILE&quot; ]
then
    FILENAME=${FILE%.cool}

    OUTFILE=$OUTDIR/$FILENAME.my
    DIFF=$OUTDIR/$FILENAME.diff
    ACC=$FILENAME.diff.acc

    sh $HEREDIR/run.sh $MODE $FILE &amp;&gt; $OUTFILE

    diff -y -b $OPT $FILE.ref $OUTFILE &gt; $DIFF

    if [ &quot;$(cat $DIFF)&quot;&#160;!= &quot;&quot; ] &amp;&amp; ([&#160;! -e $ACC ] || [ &quot;$(diff $DIFF $ACC)&quot;&#160;!= &quot;&quot; ])
    then
        cat $DIFF
    else
        rm -f $OUTFILE
        rm -f $DIFF
    fi
fi
</pre></code>
<h2> <span class="mw-headline" id="scan_all.sh">scan_all.sh</span></h2>
<code><pre>#!/bin/bash

sh run_all.sh scan cool
</pre></code>
<h2> <span class="mw-headline" id="parse_all.sh">parse_all.sh</span></h2>
<code><pre>#!/bin/bash

sh run_all.sh parse test
</pre></code>
<h2> <span class="mw-headline" id="semant_all.sh">semant_all.sh</span></h2>
<code><pre>#!/bin/bash

sh run_all.sh semant test
</pre></code>
<h2> <span class="mw-headline" id="cgen_all.sh">cgen_all.sh</span></h2>
<code><pre>#!/bin/bash

sh run_all.sh cgen cl
</pre></code>
<h2> <span class="mw-headline" id="all_tests.sh">all_tests.sh</span></h2>
<code><pre>#!/bin/bash

sh scan_all.sh
if [ $? -ne 0 ]
then
    exit $?
fi

sh parse_all.sh
if [ $? -ne 0 ]
then
    exit $?
fi

sh semant_all.sh
if [ $? -ne 0 ]
then
    exit $?
fi

sh cgen_all.sh
if [ $? -ne 0 ]
then
    exit $?
fi
</pre></code>

<!-- 
NewPP limit report
Preprocessor node count: 77/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->


</div><div class="printfooter">
Retrieved from "<a href="https://share.coursera.org/wiki/index.php?title=Compilers:Testsuites&amp;oldid=8905">https://share.coursera.org/wiki/index.php?title=Compilers:Testsuites&amp;oldid=8905</a>"</div>
					<div id='catlinks' class='catlinks catlinks-allhidden'></div>					<!-- end content -->
									</div>
			</div>